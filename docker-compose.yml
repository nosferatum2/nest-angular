version: "3.8"

services:
  api:
    container_name: api
    build:
      dockerfile: Dockerfile
      context: ./api
      target: development
    # Mount host directory to the container
    # Mount api directory (./api) to (:) the container(/src/app)
    # Reflect File Changes from host to container
    volumes:
      - ./api:/src/app
      - /src/app/node_modules
    command: npm run start:dev
    depends_on:
      - db
    environment:
      NODE_ENV: development
      PORT: ${API_PORT:-4200}
    env_file:
      - .env.compose
    ports:
      - "4200:4200"
      - "9229:9229"

  ui:
    container_name: ui
    build:
      dockerfile: Dockerfile
      context: ./ui
      target: development
    volumes:
      - ./ui:/ui/src/app
      - /src/app/node_modules
    command: npm run start
    ports:
      - "3000:3000"
    links:
      - api

  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_DB: ${DB_NAME:-database}
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASS:-password}
    env_file:
      - .env.compose
    ports:
      - "5432:${DB_PORT:-5432}"
      - "5433:5433"

  postgres-admin:
    image: dpage/pgadmin4:8.2
    container_name: db-pgadmin
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DB_PGADMIN_EMAIL:-5wqFP@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${DB_PGADMIN_PASS:-admin}
    env_file:
      - .env.compose
    ports:
      - "5050:80"